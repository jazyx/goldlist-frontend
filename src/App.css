/**
 * frontend/src/App.css
 */

:root {
  --white: #fff;
  --light: #ddd;
  --grey:  #ccc;
  --shady: #888;
  --shade: #666;
  --dark:  #222;
  --black: #000;
  --mask:  #222c;

  --tab:      5rem;
  --tab-font: 2rem;
  --gap:      0.5rem;
  --slim:     0.25rem;
  --drop:    -0.4rem;
  --edge:     0.1rem;
  --width:    16rem;
  --scroll:   20px; /* can be tweaked for browser by JavaScript */

  --button: #666;
  --button-border: #999;
  --button-active: #555;
  --primary: #060;
  --primary-border: #393;
  --primary-active: #030;
  --disabled: #444;
  --disabled-color: #777;
  --disabled-border: #444;
  --hinted: #ccc;

  --button-size: 1.8em;
  --saved-button: #060;
  --altered: #fcc;
  --altered-button: #900;
  --altered-active: #a00;
  --altered-border: #c33;
  --saving: #c70;

  /* Connect */
  --warn:  2.25rem;
  --wide:  calc(var(--width) + var(--warn));
  --span:  11rem;
  --side:  1rem;
  --form:  calc(var(--wide) - var(--gap)); /* 5px HACK */
  --pass:  calc(var(--form) - var(--warn));
  --warning: #640;
  --warning-border: #960;
  --warning-active: #420;

  /* Input slider and Review */
  --full:   min(100vw, 60rem);
  --fill:   calc(var(--full) - var(--scroll));
  --size:   6rem;
  --half:   calc(var(--size) * 0.5);
  --count:  calc(var(--size) * 0.333);
  --text:   "Courier New", monospace;
  --font:   1.5rem;
  --line:   1.5rem;
  --border: #333;
  --right:  #090;
  --wrong:  #900;
  --bg:     #666;
  --on:     #fff;
  --off:    #888;
  --duration: 250ms;
}

body {
  margin: 0;
  min-height: 100vh;
  color: var(--light);
  background-color: var(--dark);
}

body,
main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

main {
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

h1 {
  font-size: 2.25rem;
}

textarea {
  resize: none;
}

/* For connections on Home page */
button {
  color: inherit;
  font-size: inherit;
  background-color: var(--button);
  border: 1px outset var(--button-border);
  border-radius: var(--gap);
  width: var(--width);
  padding: var(--gap);
  cursor: pointer;

  &.primary {
    background-color: var(--primary);
    border-color: var(--primary-border);
  }

  &:hover {
    background-color: var(--button-active);
    color: #fff;
  }

  &.primary:hover {
    background-color: var(--primary-active);
  }

  &:hover:active{
    border-style: inset;
    background-color: #000;
  }

  &:disabled {
    color: var(--disabled-color);
    background-color: var(--disabled);
    border: 1px solid var(--disabled-border);
    pointer-events: none;
    cursor: default;
  }
}

label.checkSlider {
  display: block;
  position: relative;

  &:has(.disabled) {
    pointer-events: none;
  }

  & input {
    position: absolute;
    left: -999vmax;

    & ~ span {
      &::before,
      &::after {
        display: flex;
        height: var(--half);
        border: var(--edge) solid var(--border);
        box-sizing: border-box;
        border-radius: 100vmax;
        cursor: pointer;
      }

      &::before {
        content: "";
        width: var(--size);
        height: var(--half);
        background-color: var(--off);
      }

      &::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: var(--half);
        justify-content: center;
        align-items: center;
        color: var(--dark);
        background-color: var(--on);
        font-size: var(--count);
        transition: all var(--duration);
      }
    }

    &:checked ~ span::after {
      left: var(--half);
      background-color: var(--off);
    }

    &.vertical {
      & ~ span::before {
        width: var(--half);
        height: var(--size);
      }

      &:checked ~ span::after {
        left: 0;
        top: var(--half);
        background-color: var(--off);
      }
    }
  }
}

ul#tabs {
  display: flex;
  list-style-type: none;
  width: 100%;
  height: var(--tab);
  font-size: var(--tab-font);
  padding: 0;
  margin: 0;

  button {
    width: 100%;
    height: var(--tab)
  }

  li {
    width: auto;
    flex: 1;

    &.active button{
      background-color: transparent;
    }

    a {
      color: inherit;
    }
  }
}

#connect {
  position: relative;
  border: 1px inset var(--grey);
  border-radius: var(--gap);
  overflow: hidden;
  font-size: 1.5rem;

  & div.connect {
    display: flex;
    align-items: stretch;
    width: calc(100% + 2px);
    margin: -1px;

    & label {
      flex: 1;
      height: 100%;
      margin: 0;
      border-style: inset;
      background-color: var(--shade);
      border-color: var(--shade);
      border-width: 1px;
      border-top-right-radius: var(--gap);
      border-top-left-radius: var(--gap);
      color: var(--dim);

      &.selected {
        border-bottom: none;
        background-color: var(--dark);
        color: var(--light);
      }

      &:not(.selected):hover {
        background-color: var(--shady);
        color: var(--white);
        cursor: pointer;
      }

      & input {
        display: none;
      }

      & span {
        display: inline-block;
        width: 100%;
        padding: var(--gap) 0 var(--slim);
        text-align: center;
      }
    }
  }

  & div.inputs {
    margin-top: var(--warn);
    padding: var(--warn) var(--side) var(--side);

    & label {
      display: block;
      margin: var(--gap) 0;

      & span {
        display: inline-block;
        width: var(--span);
      }

      & input {
        display: inline-block;
        width: var(--form);
        font-size: inherit;
      }

      &.password {
        display: flex;

        & input {
          width: var(--pass);
        }

        & button {
          width: var(--warn);
          height: var(--warn);
          padding: 0;
          border-radius: 100vmax;
          background-color: var(--white);
          /* overflow: hidden; */
          img {
            width: 95%;
          }
        }
      }
    }
  }

  & p.failed {
    height: var(--warn);
    margin: 0 var(--side);
    color: #fa0;
    text-align: center;
  }

  & .buttons {
    padding: var(--side);
    text-align: right;

    & button.primary {
      width: var(--wide);
    }

    & .guest {
      margin-top: var(--gap);
    }
  }

  button.warning,
  div.warning button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: var(--warn);
    height: var(--warn);
    border-radius: var(--warn);
    padding: 0;
    background-color: var(--warning);
    border-color: var(--warning-border);

    &:hover {
      background-color: var(--warning-active);
      color: var(--white);
    }

    &:hover:active{
      border-style: inset;
    }
  }

  & div.warning {
    position: fixed;
    width: min(100vw, 30rem);
    height: fit-content;
    padding: var(--gap);
    border: 1px inset var(--warning-border);
    border-radius: var(--gap);
    background-color: var(--warning);
    text-align: left; /* Counters the right align of the buttons */
    /* Centre in viewport */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;

    & h2 {
      text-align: center;
    }

    p {
      margin-bottom: 0;
    }

    & button {
      position: absolute;
      top: 0;
      right: 0;
      font-size: var(--warn);
    }
  }
}

div#phrases {
  counter-set: number;
  overflow-y: auto;
  position: relative;

  div.phrases {
    position: relative;
    height: 100%;
    overflow-y: auto;
    width: var(--full);
  }

  div.phrase {
    display: flex;
    width: var(--fill);
    border-radius: 100vmax;
    box-sizing: border-box;
    background-color: var(--bg);
    margin-bottom: var(--gap);
    counter-increment: number;

    div.number,
    div.button {
      display: flex;
      justify-content: center;
      align-items: center;
      width: var(--size);
    }

    div.number {
      span {
        &::before {
          content: counter(number);
          display: flex;
          justify-content: center;
          align-items: center;
          width: var(--half);
          height: var(--half);
          font-size: var(--count);
          color: var(--black);
          background-color: var(--white);
          border: var(--edge) solid var(--border);
          border-radius: 100vmax;
          box-sizing: border-box;
        }
      }
    }

    div.desk {
      flex: 1;
    }

    textArea {
      display: block;
      width: 100%;
      height: var(--half);
      padding: var(--slim) var(--gap);
      box-sizing: border-box;
      font-family: var(--text);
      font-size: var(--font);

      &.altered {
        background-color: var(--altered);
      }

      &.hinted {
        background-color: var(--hinted);
      }
    }

    div.button {
      & button {
        height: var(--half);
        width: var(--half);
        border-radius: 100vmax;
        border: none;
        pointer-events: none;

        &.saved  {
          background-color: var(--saved-button);
        }

        &.altered  {
          background-color: var(--altered-button);
          border-color: var(--altered-border);
          border-style: outset;
          border-width: 2px;
          pointer-events: all;

          &:hover {
            background-color: var(--altered-active);

            &:active {
              border-style: inset;
            }
          }
        }

        &.saving  {
          background-color: var(--saving);
        }
      }
    }
  }

  &:has(.mask) {
    /* Prevent actions on the elements behind the mask */
      & .lists {
        pointer-events: all;
      }

      & textarea {
        pointer-events: none;
      }
  }
}

footer {
  display: flex;
  align-items: center;
  width: 100%;
  height: var(--size);
  background-color: var(--dark);
  font-size: var(--tab-font);

  div.counter {
    position: relative;
    height: var(--size);
    width: var(--size);
    display: flex;
    justify-content: center;
    align-items: center;

    span.counter { /* Counter */
      display: flex;
      flex-basis: var(--size);
      flex-shrink: 0;
      justify-content: center;
      align-items: center;
      height: var(--size);
      border-radius: 100vmax;
    }
    span.icon {
      position: absolute;
      bottom: var(--drop);
      left: 0;
    }
  }
  div.counter.right span {
    left: auto;
    right: 0;
  }

  button {
    flex: 1;
    height: 100%;
  }

  /* Specific controls for CheckSlider in ReviewFooter */
  label.checkSlider input.open-all {
    ~ span::after {
      content: "📗";
      background-color: var(--off);

      /* 📗📖 🥢🪭*/
    }

    &:checked ~ span::after {
      content: "📖";
      background-color: var(--on);
    }
  }
}

#reviews {
  counter-set: phraseCounter;
  position: relative;
  overflow: hidden;

  div.reviews {
    position: relative;
    height: 100%;
    overflow-y: auto;
    width: var(--full);
  }

  .review {
    display: flex;
    width: var(--fill);
    height: var(--size);
    background-color: var(--bg);
    margin-bottom: var(--gap);
    border-radius: 100vmax;
    overflow: hidden;
    transition: all var(--duration);

    div.control {
      display: flex;
      justify-content: center;
      align-items: center;
      width: var(--size);
      background-color: var(--bg);

      div.circle {
        height: var(--half);
        width: var(--half);
        border-radius: 100vmax;
        background-color: var(--primary);
      }
    }

    div.desk {
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;
      flex-grow: 1;

      p {
        height: var(--half);
        padding: var(--slim);
        box-sizing: border-box;
        margin: 0;
        font-size: var(--font);
        line-height: var(--line);
        transition: all var(--duration);

        &.feedback {
          font-family: var(--text);
          color: var(--black);
          background-color: var(--white);
          padding: 0 var(--slim) ;
          border: var(--slim) solid var(--white);

          & b {
            color: var(--wrong);
          }

          & u {
            /* Overwrite u from underline to grey */
            color: var(--grey);
            text-decoration: none;
          }

          &.right {
            border-color: var(--right);
          }
          &.wrong {
            border-color: var(--wrong);
          }
          &.locked {
            color: var(--black);
            border-color: var(--off);
            background-color: var(--light);
          }
        }
      }

      textarea {
        position: absolute;
        top: 0;
        height: var(--half);
        width: 100%;
        margin: 0;
        border: none;
        padding: var(--slim) var(--gap);
        box-sizing: border-box;
        font-family: var(--text);
        font-size: var(--font);
        line-height: var(--line);
        color: var(--black);
        opacity: 0.75;
        background-color: transparent;
        transition: all var(--duration);
      }
    }

    /* Specific controls for CheckSlider in Review */
    label.checkSlider input {
      &.front {
        ~ span::after {
          left: var(--half);
        }

        /* Increment phraseCounter only if phrase is neither
          * retained nor flagged to be retained
          */
        &:not(.locked) {
            &:not(:checked) {
            ~ span::after {
              counter-increment: phraseCounter 1;
              content: counter(phraseCounter);
            }
          }

          &:checked ~ span::after {
            content: "🛟";
            left: 0;
          }
        }

        &.locked {
          & ~ span::after {
            content: "🔓";
          }

          &.disabled ~ span::after {
            background-color: var(--off);
            border-color: var(--disabled);
          }

          &:checked ~ span::after {
            content: "🔒";
            left: 0;
          }
        }
      }

      &.back {
        &:not(:checked) ~ span::after {
          content: "👓";
        }

        &:checked ~ span::after {
          content:  "🕶️";
        }

        &.disabled {
          & ~ span::before {
            content:  "";
            background-color: var(--bg);
            border-color: var(--disabled);
            cursor: default;
          }
          & ~ span::after {
            content: "👓";
            background-color: var(--off);
            border-color: var(--disabled);
          }
          &:not(.open) ~ span::after {
            display: none
          }
        }
      }
    }

    /* Specific controls for collapsing CheckSlider in Review */
    &:has(input.front:checked:not(.open)) {
      height: var(--half);

        div.control {
          background-color: var(--bg);
        }

      & p.feedback,
      & textarea {
        height: 0;
        padding: 0 var(--slim);
        border-top-width: 0;
        border-bottom-width: 0;
        overflow: hidden;
      }

      &:has(input.back:checked) {
        background-color: transparent;

        div.control {
          background-color: transparent;
        }

        div.desk {
          p.hint {
            height: 0;
            overflow: hidden;
            border: var(--edge) solid var(--off);
            padding: 0;
          }
        }
      }
    }
  }

  /* Prevent actions on the elements behind the mask */
  &.mask {
    & .reviews {
      pointer-events: all;
    }

    & .review {
      pointer-events: none;
    }
  }
}

.spacer {
  flex-grow: 1;
}

div.mask {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--mask);
  /* Allow the div.review behind the mask to scroll */
  pointer-events: none;

  & .dialog {
    display: flex;
    flex-direction: column;
    max-height: 100%;
    width: min(50%, 50vw);
    padding: var(--gap);
    border: 1px solid var(--white);
    border-radius: var(--gap);
    box-sizing: border-box;
    font-size: 1.5rem;
    text-align: center;
    background-color: var(--dark);
    pointer-events: all;

    h2 {
      margin: 0;
    }

    ul {
      flex: 1;
      overflow: auto;
      min-height: 1.2rem;
      text-align: left;
    }

    button {
      align-self: flex-end
    }
  }
}

div.three-way {
  --long:  60vmin;                    /* long side */
  --cross: calc(var(--size) * 0.5);   /* ratio of short side */
  --twice: calc(var(--size) - var(--cross));
  --once:  calc(var(--twice)* 0.5);
  --icon:  calc(var(--cross) * 0.85); /* font-size for icon */
  --edge:  calc(var(--size) * 0.02);  /* border width */
  --side:  #fff;                    /* border color */
  /* backgroundColor of dots in various states */
  --off:   #900;
  --mid:   #a50;
  --on:    #060;
  /* backgroundColor of slider in various states */
  --bgoff: #333;
  --bgmid: #666;
  --bgon:  #999;
  /* icons for various states */
  --ioff:  "☁️";
  --imid:  "🌤️";
  --ion:   "☀️";

  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--long);
  height: var(--cross);
  background-color: var(--bgoff);
  border: var(--edge) solid var(--side);
  border-radius: 100vmax;
  box-sizing: border-box;
  overflow: hidden;

  /* Make labels fill one-third each, shrunk to fit by flex */
  label {
    width: 100%;
    height: 100%;

    /* UNCOMMENT THE RULES BELOW TO SHOW LABEL WIDTHS */
    /* background-color: var(--bgoff);

    &:has(.mid) {
      background-color: var(--bgmid);
    }

    &:has(.on) {
      background-color: var(--bgon);
    } */
    /* UNCOMMENT THE RULES ABOVE TO SHOW LABEL WIDTHS */

    /* Hide the radio buttons, but labels keep them active */
    input {
      display: none;
    }
  }

  &::after {
    /* Specific for off state */
    content: var(--ioff);
    background-color: var(--off);

    /* Generic for all states */
    position: absolute;
    top: 0;
    left: 0;
    /* Center the icon */
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: var(--icon);
    /* Round button */
    width: var(--cross);
    height: var(--cross);
    border-radius: 100vmax;
    overflow: hidden; /* allows click above edge */

    transition: all 250ms;
  }

  /* Specific settings for mid and on states */
  &:has(.mid:checked) {
    background-color: var(--bgmid);

    &::after {
      content: var(--imid);
      left: var(--once);
      background-color: var(--mid);
    }
  }

  &:has(.on:checked) {
    background-color: var(--bgon);

    &::after {
      content: var(--ion);
      left: var(--twice);
      background-color: var(--on);
    }
  }

  /* Custom settings for a vertical three-way slider */
  &.vertical {
    flex-direction: column;
    width: var(--cross);
    height: var(--long);

    &:has(.mid:checked)::after {
      left: 0;
      top: var(--once);
    }

    &:has(.on:checked)::after {
      left: 0;
      top: var(--twice);
    }
  }

  /* Custom settings for named three-way sliders */
  &.limit {
    --long:  var(--size);
    /* backgroundColor of dots in various states */
    --off:   var(--light);
    --mid:   var(--grey);
    --on:    #888; /* can't use var(--off) from root */
    /* backgroundColor of slider in various states */
    --bgoff: #888;
    --bgmid: #888; /* can't use var(--off) from root */
    --bgon:  #888;
    /* icons for various states */
    --ioff:  "☀️";
    --imid:  "🌤️";
    --ion:   "☁️";
    border: none;

    &::after {
      border: var(--edge) solid var(--border);
      box-sizing: border-box;
    }
  }
}

/* Ensure Phrase + Review textareas show placeholder on one line
 * all the way down to width = 400px
 */
@media (max-width: 842px) {
  :root {
    font-size: 1.9vw;
  }
}