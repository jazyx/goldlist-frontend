/**
 * src/general.css
 */

 @import './menu.css';
 @import './checkSlider.css';
 @import './threeWay.css';
 @import './stepSlider.css';

:root {
  --white: #fff;
  --light: #ddd;
  --grey:  #ccc;
  --shady: #888;
  --shade: #666;
  --dark:  #222;
  --black: #000;
  --mask:  #222c;
  --gold:  #fd8;
  --old:   #b72;

  --tab:      5rem;
  --tab-font: 2rem;
  --gap:      0.5rem;
  --slim:     0.25rem;
  --drop:    -0.4rem;
  --edge:     0.1rem;
  --width:    16rem;
  --scroll:   20px; /* can be tweaked for browser by JavaScript */
  --bar:      1px;

  --button: #666;
  --button-border: #999;
  --button-active: #555;
  --primary: #060;
  --primary-border: #393;
  --primary-active: #030;
  --disabled: #444;
  --disabled-color: #777;
  --disabled-border: #444;
  --hinted: #ccc;

  --button-size: 1.8rem;
  --saved-button: #060;
  --altered: #fcc;
  --altered-button: #900;
  --altered-active: #a00;
  --altered-border: #c33;
  --saving: #c70;

  /* Connect */
  --warn:  2.25rem;
  --wide:  calc(var(--width) + var(--warn));
  --span:  11rem;
  --side:  1rem;
  --form:  calc(var(--wide) - var(--gap)); /* 5px HACK */
  --pass:  calc(var(--form) - var(--warn));
  --warning: #640;
  --warning-border: #960;
  --warning-active: #420;

  /* Input slider and Review */
  --full:   min(100vw, 60rem);
  --fill:   calc(var(--full) - var(--scroll) - var(--bar));
  --space:  4.5rem;
  --room:   calc(var(--space) * 2);
  --size:   6rem;
  --half:   calc(var(--size) * 0.5);
  --count:  calc(var(--size) * 0.333);
  --text:   'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  /* Allow 2 lines of text to be visible before scrolling starts */
  --font:   1.5rem;
  --line:   1.8rem;
  --border: #333;
  --right:  #090;
  --wrong:  #f008;
  --bg:     #666;
  --on:     #fff;
  --off:    #888;
  --duration: 250ms;
}

body {
  margin: 0;
  min-height: 100vh;
  color: var(--light);
  background-color: var(--dark);
  font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif
}

body,
main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  overflow: hidden;
}

main {
  height: 100vh;
  width: 100vw;
}

h1 {
  font-size: 2.25rem;
}

textarea {
  resize: none;
}

/* For connections on Home page */
button,
.button {
  color: inherit;
  font-size: inherit;
  background-color: var(--button);
  border: 1px outset var(--button-border);
  border-radius: var(--gap);
  width: var(--width);
  padding: var(--gap);
  cursor: pointer;

  &.primary {
    background-color: var(--primary);
    border-color: var(--primary-border);
  }

  &:hover {
    background-color: var(--button-active);
    color: #fff;
  }

  &.primary:hover {
    background-color: var(--primary-active);
  }

  &:hover:active{
    border-style: inset;
    background-color: #000;
  }

  &:disabled {
    color: var(--disabled-color);
    background-color: var(--disabled);
    border: 1px solid var(--disabled-border);
    pointer-events: none;
    cursor: default;
  }
}

button.use-method {
  width: calc(100% - var(--bar));
  height: var(--tab);
  flex-shrink: 0;
  margin: 0 auto;
  font-size: var(--font);
  z-index: 1;
}

#frame {
  display: flex;
}

#gold-bar {
  position: relative;
  flex-shrink: 0;
  width: var(--bar);
  background-color: var(--gold);
  height: 100vh;
}

ul#tabs {
  display: flex;
  list-style-type: none;
  width: 100%;
  height: var(--tab);
  font-size: var(--tab-font);
  padding: 0;
  margin: 0;
  z-index: 1;

  button {
    width: 100%;
    height: var(--tab);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-style: inset;
  }

  li {
    width: auto;
    flex: 1;

    &.active button{
      background-color: transparent;
      border-bottom: none;
    }

    a {
      color: inherit;
    }
  }
}

#icon-bar {
  display: flex;
  justify-content: space-between;
  width: 100vw;
  height: var(--size);
  z-index: 1;

  a {
    position: relative;
    height: var(--size);
    width: var(--size);
    border-radius: var(--size);
    padding: 0;

    & > img {
      position: absolute;
      left: 0;
      width: 100%;
    }

    span {
      position: absolute;
      display: flex;
      justify-content: space-between;
      width: 120%;
      bottom: 0;
      left: -10%;

      img {
        width: 40%;
        opacity: 0.5;
      }
    }
  }
}

div#about,
div#i18n,
div#profile {
  display: flex;
  flex-direction: column;
  height: 100vh;
  font-size: var(--font);

  & h1,
  & h2,
  & h3 {
    text-align: center;
  }
  & h1 {
    margin-top: 0;
    font-size: 2em;
  }
}

div#connect {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100vw;
  height: 100vh;

  & div.dialog {
    width: fit-content;
    flex-shrink: 0;
    border: 1px inset var(--grey);
    border-radius: var(--gap);
    overflow: hidden;
    font-size: var(--font);

    & div.connect {
      display: flex;
      align-items: stretch;
      width: calc(100% + 2px);
      margin: -1px;

      & label {
        flex: 1;
        height: 100%;
        margin: 0;
        border-style: inset;
        background-color: var(--shade);
        border-color: var(--shade);
        border-width: 1px;
        border-top-right-radius: var(--gap);
        border-top-left-radius: var(--gap);
        color: var(--dim);

        &.selected {
          border-bottom: none;
          background-color: var(--dark);
          color: var(--light);
        }

        &:not(.selected):hover {
          background-color: var(--shady);
          color: var(--white);
          cursor: pointer;
        }

        & input {
          display: none;
        }

        & span {
          display: inline-block;
          width: 100%;
          padding: var(--side) 0 var(--gap);
          text-align: center;
        }
      }
    }
  }

  & div.inputs {
    margin-top: var(--warn);
    padding: var(--warn) var(--side) var(--side);

    & label {
      display: block;
      margin: var(--gap) 0;

      & span {
        display: inline-block;
        width: var(--span);
      }

      & input {
        display: inline-block;
        width: var(--form);
        font-size: inherit;
      }

      &.password {
        display: flex;

        & input {
          width: var(--pass);
        }

        & button {
          width: var(--warn);
          height: var(--warn);
          padding: 0;
          border-radius: 100vmax;
          background-color: var(--white);
          img {
            width: 95%;
          }
        }
      }
    }
  }

  & p.failed {
    height: var(--warn);
    margin: 0 var(--side);
    color: #fa0;
    text-align: center;
  }

  & .buttons {
    padding: var(--side);
    text-align: right;

    & button.primary {
      width: var(--wide);
    }

    & .guest {
      margin-top: var(--gap);
    }
  }

  button.warning,
  div.warning button {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: var(--warn);
    height: var(--warn);
    border-radius: var(--warn);
    padding: 0;
    background-color: var(--warning);
    border-color: var(--warning-border);

    &:hover {
      background-color: var(--warning-active);
      color: var(--white);
    }

    &:hover:active{
      border-style: inset;
    }
  }

  & div.warning {
    /* Centre in viewport */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: auto;

    width: min(100vw, 40rem);
    height: fit-content;
    padding: var(--gap);
    border: 1px inset var(--warning-border);
    border-radius: var(--gap);
    background-color: var(--warning);
    text-align: left; /* Counters the right align of the buttons */

    & h2 {
      text-align: center;
    }

    p {
      margin-bottom: 0;
    }

    & button {
      position: absolute;
      top: 0;
      right: 0;
      font-size: var(--warn);
    }
  }
}

div#about div.info {
  margin: 0 auto;
  padding: 1em;
  box-sizing: border-box;
  max-width: 800px;
  overflow-y: scroll;

  & figure {
    width: 100%;
    text-align: center;
    font-size: 0.75em;
    margin: 0;
    padding: 0;

    & img {
      padding: 0;
      max-width: calc(100% - 2em);
    }

    & figcaption {
      width: min(520px, calc(100% - 2em));
      margin: 0 auto 1em;
    }
  }
}


/* General settings for all Phrase and Review text stuff */
div.phrase,
div.review {
  p,
  textarea {
    height: var(--space);
    width: 100%;
    margin: 0;
    padding: var(--slim);
    font-size: var(--font);
    line-height: var(--line);
    overflow: hidden;
    font-family: var(--text);
    white-space: pre-wrap;
    border: var(--slim) solid transparent;
    box-sizing: border-box;
    transition: all var(--duration);
  }
}

div#phrases {
  counter-set: number;
  overflow-y: auto;
  position: relative;

  & div.dialog {
    & button {
      margin: 0 auto;
    }
  }

  & div.phrases {
    position: relative;
    height: 100%;
    overflow-y: auto;
    width: var(--full);
  }

  div.phrase {
    display: flex;
    width: var(--fill);
    border-radius: 100vmax;
    box-sizing: border-box;
    background-color: var(--bg);
    margin-bottom: var(--gap);
    counter-increment: number;
    overflow: hidden;

    div.number,
    div.button {
      display: flex;
      justify-content: center;
      align-items: center;
      width: var(--size);
    }

    div.number {
      span {
        &::before {
          content: counter(number);
          display: flex;
          justify-content: center;
          align-items: center;
          width: var(--half);
          height: var(--half);
          font-size: var(--count);
          color: var(--black);
          background-color: var(--white);
          border: var(--edge) solid var(--border);
          border-radius: 100vmax;
          box-sizing: border-box;
        }
      }
    }

    div.desk {
      flex: 1;
    }

    textArea {
      border-color: black;
      border-width: 1px;
      overflow-y: auto;

      &.altered {
        background-color: var(--altered);
      }

      &.hinted {
        background-color: var(--hinted);
      }
    }

    div.button {
      & button {
        font-size: var(--half);
        display: flex;
        justify-content: center;
        align-items: center;
        height: var(--half);
        width: var(--half);
        border-radius: 100vmax;
        border: none;
        pointer-events: none;

        &.altered  {
          background-color: var(--altered-button);
          border-color: var(--altered-border);
          border-style: outset;
          border-width: 2px;
          pointer-events: all;

          &:hover {
            background-color: var(--altered-active);

            &:active {
              border-style: inset;
            }
          }
        }

        &.saving  {
          background-color: var(--saving);
        }
      }
    }
  }

  &:has(.mask) {
    /* Prevent actions on the elements behind the mask */
      & .lists {
        pointer-events: all;
      }

      & textarea {
        pointer-events: none;
      }
  }
}

#reviews {
  counter-set: phraseCounter;
  position: relative;
  overflow: hidden;

  div.reviews {
    position: relative;
    height: 100%;
    overflow-y: auto;
    width: var(--full);

    .review {
      display: flex;
      align-items: center;
      width: var(--fill);
      height: var(--room);
      background-color: var(--bg);
      margin-bottom: var(--gap);
      border-radius: 100vmax;
      overflow: hidden;
      transition: all var(--duration);

      & div.control {
        display: flex;
        justify-content: center;
        align-items: center;
        width: var(--size);
        background-color: var(--bg);
        font-size: var(--half);
      }

      & div.desk {
        position: relative;
        flex-grow: 1;

        & p.feedback{
          border-color: var(--white);
          background-color: var(--white);

          & b {
            color: var(--wrong);
          }
          & u {
            /* Overwrite u from underline to grey */
            color: var(--grey);
            text-decoration: none;
          }
          &.right {
            border-color: var(--right);
          }
          &.wrong {
            border-color: var(--wrong);
          }
          &.locked {
            color: var(--black);
            border-color: var(--off);
            background-color: var(--light);
          }
        }

        textarea {
          position: absolute;
          top: 0;
          left: 0;
          opacity: 0.75;
          background-color: transparent;
          border-color: transparent;
        }
      }

      /* Specific controls for CheckSlider in Review */
      & label.checkSlider input {
        &.front {
          ~ span::after {
            left: var(--half);
          }

          /* Increment phraseCounter only if phrase is neither
            * retained nor flagged to be retained
            */
          &:not(.locked) {
              &:not(:checked) {
              ~ span::after {
                counter-increment: phraseCounter 1;
                content: counter(phraseCounter);
              }
            }

            &:checked ~ span::after {
              content: "✅";
              left: 0;
            }
          }

          &.locked {
            & ~ span::after {
              content: "🔓";
            }

            &.disabled ~ span::after {
              background-color: var(--off);
              border-color: var(--disabled);
            }

            &:checked ~ span::after {
              content: "🔒";
              left: 0;
            }
          }
        }

        &.back {
          &:not(:checked) ~ span::after {
            content: "👓";
          }

          &:checked ~ span::after {
            content:  "🕶️";
          }

          &.disabled {
            & ~ span::before {
              content:  "";
              background-color: var(--bg);
              border-color: var(--disabled);
              cursor: default;
            }
            & ~ span::after {
              background-color: var(--bg);
              border-color: var(--disabled);
              opacity: 0.5;
            }
            &.shut {
              & ~ span::after {
                content: "🕶️";
              }
            }
          }
        }
      }

      /* Specific controls for collapsing CheckSlider in Review */
      &:has(input.front:checked:not(.open)) {
        height: var(--half);

        & div.control {
          background-color: var(--bg);
        }

        & p.feedback,
        & textarea {
          height: 0;
          padding: 0 var(--slim);
          border-top-width: 0;
          border-bottom-width: 0;
          overflow: hidden;
        }

        &:has(input.back:checked),
        &:has(.circle.disabled) { /* required for GreenCircle */
          background-color: transparent;

          div.control {
            background-color: transparent;

            & .circle {
              display: flex;
              justify-content: center;
              align-items: center;
              width: var(--size);
              height: var(--half);
              border-radius: 100vmax;
              background-color: var(--bg);
            }
          }

          div.desk {
            p.hint {
              height: 0;
              overflow: hidden;
              border: var(--edge) solid var(--off);
              padding: 0;
            }
          }
        }
      }
    }
  }

  /* Prevent actions on the elements behind the mask */
  &.mask {
    & .reviews {
      pointer-events: all;
    }

    & .review {
      pointer-events: none;
    }
  }
}

#profile {
  text-align: center;

  & article {
    overflow-y: auto;
    overflow-x: hidden;

    h3 {
      text-decoration: underline;
    }

    & div.step-slider {
      margin: 2em auto;
      --older: #641;

      --color-upper:    var(--older);
      --color-lower:    var(--old);
      --color-thumb:    var(--gold);
      --color-min:      var(--older);
    }

    div#step-slider-phraseCount {
      /* height of div.labels must include labels at start _and_ end */
      --total:   21;
      --width:   12em; /* Wide enough to show labels on one side */
      --spacing: 0.6667em; /* spacing between labels */
    }

    div#step-slider-daysDelay {
      /* height of div.labels must include labels at start _and_ end */
      --total:   14;
      --width:   22em; /* Wide enough to show labels both sides */
      /* --spacing: 1em; */ /* Use default spacing between labels */
    }
  }

  & button.save {
    --button: var(--old);
    --button-border: var(--gold);
    --button-active: var(--gold);
    position: fixed;
    bottom: var(--tab);
    right: calc(var(--scroll) * 1px);
    width: var(--tab);
    height: var(--tab);
    padding: var(--gap);
    font-size: 2em; /* Make the emoji fill the button */
  }
}

#i18n label {
  z-index: 1
}

footer {
  display: flex;
  align-items: center;
  width: calc(100% - var(--bar));
  height: var(--size);
  background-color: var(--dark);
  font-size: var(--tab-font);

  & div.counter {
    position: relative;
    height: var(--size);
    width: var(--size);
    display: flex;
    justify-content: center;
    align-items: center;

    & span.counter {
      display: flex;
      flex-basis: var(--size);
      flex-shrink: 0;
      justify-content: center;
      align-items: center;
      height: var(--size);
      border-radius: 100vmax;
    }

    & span.icon {
      position: absolute;
      bottom: var(--drop);
      left: 0;
    }

    &.right span.icon {
      left: auto;
      right: 0;
    }
  }

  & button {
    flex: 1;
    height: 100%;
  }

  /* Custom settings for three-way slider */
  & div.three-way.limit {
    --long:  var(--size);
    /* backgroundColor of dots in various states */
    --off:   var(--light);
    --mix:   var(--grey);
    --on:    #888; /* can't use var(--off) from root */
    /* backgroundColor of slider in various states */
    --bgoff: #888;
    --bgmix: #888; /* can't use var(--off) from root */
    --bgon:  #888;
    /* icons for various states */
    --ioff:  "👓";
    --imix:  "🌤️";
    --ion:   "🕶️";
    border: none;

    &::before,
    &::after {
      border: var(--edge) solid var(--border);
      box-sizing: border-box;
    }

    /* Specific settings for mix state, with split emoji */
    &:has(.mix:checked) {
      /* Show full size off icon, underneath... */
      &::before {
        content: var(--ioff);
      }
      /* ...half an ::after on icon */
      &::after {
        content: var(--ion);
        clip-path: rect(0 100% 100% 50%);
        background-color: var(--bgmix);
      }
    }
  }
}

.spacer {
  flex-grow: 1;
}

div.mask {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--mask);
  /* Allow the div.review behind the mask to scroll */
  pointer-events: none;

  & div.dialog {
    display: flex;
    flex-direction: column;
    max-height: 100%;
    width: min(50%, 50vw);
    padding: var(--gap);
    border: 1px solid var(--white);
    border-radius: var(--gap);
    box-sizing: border-box;
    font-size: var(--font);
    text-align: center;
    background-color: var(--dark);
    pointer-events: all;

    h2 {
      margin: 0;
    }

    ul {
      flex: 1;
      overflow: auto;
      min-height: 1.2rem;
      text-align: left;
    }

    div.buttons {
      display: flex
    }
  }
}

/* Ensure Phrase + Review textareas show placeholder on one line
 * all the way down to width = 400px
 */
@media (max-width: 842px) {
  :root {
    font-size: 1.9vw;
  }
}